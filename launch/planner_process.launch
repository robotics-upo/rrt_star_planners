<launch>
    <arg name="planner_type" default="rrt_star"/>

    <arg name="pause_execution" default="false"/>
    <arg name="write_data_files" default="true"/>
    <arg name="use_distance_function" default="true"/>  

    <arg name="world_frame" default="map"/> 
    <arg name="ugv_frame" default="ugv_base_link"/> 
    <arg name="uav_frame" default="uav_base_link"/>
    <arg name="reel_frame" default="reel_base_link"/>
    
    <arg name="debug_msgs" default="false"/>
    <arg name="just_line_of_sigth" default="false"/>
    
    <arg name="distance_obstacle_ugv"    default="0.5"/>   
    <arg name="distance_obstacle_uav"    default="0.5"/>   
    <arg name="distance_tether_obstacle"    default="0.12"/>   

    <arg name="length_tether_max"    default="30.0"/>   

    <arg name="save_path_in_file"   default="false"/>

    <!-- To wirte Files -->
    <arg name="map_file"        default="stage_1"/>
    <arg name="num_pos_initial"         default="1"/>
    <arg name="name_output_file"    default="method"/>     
    <arg name="files_results"    default="results_marsupial_optimizer"/>     
    <!-- RRT Parameters -->
    <arg name="n_iter_rrt"          default="100"/>
    <arg name="n_loop_rrt"          default="100"/>
    <arg name="radius_near_nodes"   default="1.2"/> 
    <arg name="goal_gap_m"          default="0.2"/> # 1.4
    <arg name="step_steer"          default="0.4"/>
    <arg name="min_l_steer_ugv"     default="8.0"/>
    <arg name="coupled"             default="false"/>
    <arg name="samp_goal_rate"      default="5"/>  <!-- sample : 15-->
    <arg name="sample_mode_rrt"     default="1"/>  <!-- Values: 1= Priority is move UAV >> UAV & UGV >> UGV ,  2= Priority is move UAV & UGV >> UAV >> UGV >>  -->

    <!-- Catenaty Checker-->
    <arg name="plane_dist" default="0.5"/>
    <arg name="dbscan_epsilon" default="0.5"/>
    <arg name="dbscan_gamma" default="0.1"/>
    <arg name="dbscan_theta" default="0.1"/>
    <arg name="use_dbscan_lines" default="false"/>
    <arg name="dbscan_min_points" default="5"/>
    <arg name="use_parable"   default="false"/>
    <arg name="n_planes" default="100"/>

    <!-- Global Planner: RRT* -->
    <node pkg="rrt_planners" type="random_global_planner_node" name="random_planner_node" output="screen"># launch-prefix="gdb -ex run --args">
        <rosparam command="load" file="$(find marsupial_optimizer)/cfg/3d_global_params.yaml"/>
        <rosparam command="load" file="$(find marsupial_optimizer)/cfg/$(arg map_file)_ws.yaml"/>        
        <remap from="/Make_Plan" to="Make_Plan"/>
        <remap from="/Execute_Plan" to="Execute_Plan"/>
        <param name="path"   value="$(env HOME)/$(arg files_results)/"/>  
        <param name="name_output_file"    value="$(arg name_output_file)"/>     
        <param name="planner_type" value="$(arg planner_type)"/> 
        <param name="world_frame" value="$(arg world_frame)"/> 
        <param name="ugv_base_frame" value="$(arg ugv_frame)"/> 
        <param name="uav_base_frame" value="$(arg uav_frame)"/>
        <param name="reel_base_frame" value="$(arg reel_frame)"/>
        <param name="pause_execution" value="$(arg pause_execution)"/>
        <param name="write_data_for_analysis"    value="$(arg write_data_files)"/>     
        <param name="debug_rrt"    value="$(arg debug_msgs)"/>     
        <param name="nodes_marker_debug"    value="false"/>     
        <param name="debug" value="$(arg debug_msgs)"/>
        <param name="showConfig" value="true"/>
        <param name="coupled"   value="$(arg coupled)"/>     
        
        <param name="n_iter" value="$(arg n_iter_rrt)"/>   
        <param name="n_loop" value="$(arg n_loop_rrt)"/>   
        <param name="radius_near_nodes" value="$(arg radius_near_nodes)"/>   
        <param name="step_steer" value="$(arg step_steer)"/>   
        <param name="min_l_steer_ugv" value="$(arg min_l_steer_ugv)"/>   
        <param name="length_tether_max" value="$(arg length_tether_max)"/>   
        <param name="num_pos_initial"   value="$(arg num_pos_initial)"/>     
        <param name="goal_gap_m"   value="$(arg goal_gap_m)"/>    
        <param name="samp_goal_rate"   value="$(arg samp_goal_rate)"/>  
        <param name="sample_mode"    value="$(arg sample_mode_rrt)"/>    
        <param name="use_distance_function"    value="$(arg use_distance_function)"/>     
        <param name="min_distance_add_new_point" value="1.0"/>  
        <param name="distance_obstacle_ugv"         value="$(arg distance_obstacle_ugv)"/> <!-- bound distance UGV to obstacles 0.05[m] resolution of the map-->
        <param name="distance_obstacle_uav"         value="$(arg distance_obstacle_uav)"/> <!-- bound distance UAV to obstacles 0.05[m] resolution of the map-->
        <param name="distance_tether_obstacle"      value="$(arg distance_tether_obstacle)"/> <!--bound distance catenary to obstacles [m] -->   
        <param name="save_path_in_file"   value="$(arg save_path_in_file)"/>
        <param name="just_line_of_sigth"   value="$(arg just_line_of_sigth)"/>

        <param name="w_nearest_ugv"    value="12"/>   # catenary Obstacles collision 0.00100
        <param name="w_nearest_uav"    value="6"/>   # catenary length 0.00150
        <param name="w_nearest_smooth"    value="10"/>   # catenary Z collision 0.00105
        <!-- For Grid3D -->
        <param name="map_path"   value="$(find marsupial_optimizer)/maps/$(arg map_file).bt"/>
        <param name="map_file"   value="$(arg map_file)"/>
        <param name="global_frame_id"   value="map"/>
        <!-- <param name="sensor_dev "   value="0.2"/> # Gaussian error -->
        <!-- Catenaty Checker-->
        <param name="use_parable"   value="$(arg use_parable)"/>
        <param name="plane_dist" value="$(arg plane_dist)"/>
        <param name="dbscan_min_points" value="$(arg dbscan_min_points)"/>
        <param name="dbscan_epsilon" value="$(arg dbscan_epsilon)"/>
        <param name="dbscan_gamma" value="$(arg dbscan_gamma)"/>
        <param name="dbscan_theta" value="$(arg dbscan_theta)"/>
        <param name="use_dbscan_lines" value="$(arg use_dbscan_lines)"/>
        <remap from="points2" to="/octomap_point_cloud_centers"/>
        <param name="n_planes" value="$(arg n_planes)"/>
    </node>
   
</launch>