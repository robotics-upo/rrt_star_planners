<launch>

    <!-- Loading Arguments -->
    <arg name="scenario_number"        default="1"/>
    <arg name="num_pos_initial"         default="1"/>
    <arg name="num_goal"         default="0"/>
    <arg name="pos_uav_above_ugv"         default="1.0"/> #meters UAV above UGV
    <arg name="use_catenary_planning" default="true"/>
    <arg name="rviz"    default="true"/> 
    <arg name="viz_file"    default="marsupial"/>

    <rosparam command="load" file="$(find marsupial_g2o)/cfg/stage_$(arg scenario_number).yaml" />
    <arg name="map_file" default="stage_$(arg scenario_number)"/>

    <!-- Publishing UGV and UAV tf -->
    <node pkg="marsupial_g2o" type="optimizer_publisher_tf_node" name="optimizer_publisher_tf_node" output="screen">
        <param name="num_pos_initial" value="$(arg num_pos_initial)"/>
        <param name="pos_uav_above_ugv" value="$(arg pos_uav_above_ugv)"/>
        <param name="uav_base_frame" value="uav_base_link"/>
        <param name="ugv_base_frame" value="ugv_base_link"/>
    </node>

    <!-- Publishing static tf -->
    <node pkg="tf" type="static_transform_publisher" name="map_tf_node" args="0 0 0 0 0 0  world /map 10"/> # x y z y p r
    <node pkg="tf" type="static_transform_publisher" name="reel_base_link_tf_node" args="0.4 0.0 0.22 -0.0 0.0 0.0  /ugv_base_link /reel_base_link 10"/> # x y z y p r

    <!-- Launch Octomap of Scenario -->
    <include file="$(find marsupial_g2o)/launch/octomap_server.launch">
        <arg name="map_file"  value="$(arg map_file)"/>    
    </include>

    <!-- Launch Optimizer and Global Planner-->
    <node pkg="timed_roslaunch" type="timed_roslaunch.sh" name="planner_sim" output="screen" 
    args="2 rrt_star_planners rrt_global.launch use_catenary_planning:=$(arg use_catenary_planning) scenario_number:=$(arg scenario_number) num_pos_initial:=$(arg num_pos_initial) num_goal:=$(arg num_goal)"/>
        
    <!-- RViz -->
    <!-- <node pkg="rviz" name="rviz" type="rviz" args="-d $(find marsupial_g2o)/viz/$(arg viz_file).rviz" if="$(arg rviz)"/> -->

</launch>