<launch>
    <arg name="planner_type" default="rrt_star"/>
    <arg name="use_dron" default="true"/>
    <arg name="launch_robot_marker" default="true"/>

    <arg name="graph_traj_in_rviz" default="false"/>
    <arg name="pause_execution" default="false"/>
    <arg name="write_data_files" default="true"/>
    <arg name="use_distance_function" default="true"/>  
    <arg name="pc_user_name"    default="simon"/>     

    <arg name="write_data_residual" default="true"/> # Parameter to write the residual value for each optimizer Functor

    <arg name="world_frame" default="map"/> 
    <arg name="ugv_frame" default="ugv_base_link"/> 
    <arg name="uav_frame" default="uav_base_link"/>
    <arg name="reel_frame" default="reel_base_link"/>
    
    <arg name="use_octomap" default="true"/>
    <arg name="verbose_optimizer" default="false"/>
    <arg name="debug_msgs" default="true"/>
    <arg name="show_config_msgs" default="true"/>

    <arg name="use_search_pyramid_planning" default="false"/>
    <arg name="length_tether_max"    default="20.0"/>   

    <!-- To wirte Files -->
    <arg name="scenario_number"        default="1"/>
    <arg name="num_pos_initial"         default="1"/>
    <arg name="name_output_file"    default="method"/>     
    <arg name="files_results"    default="results_marsupial_optimizer/"/>     
    <arg name="files_residuals"    default="residuals_optimization_data/"/>     
    <!-- RRT Parameters -->
    <arg name="n_iter_rrt"          default="500"/>
    <arg name="n_loop_rrt"          default="100"/>
    <arg name="radius_near_nodes"   default="1.0"/> 
    <arg name="goal_gap_m"          default="0.8"/>
    <arg name="step_steer"          default="0.4"/>
    <arg name="min_l_steer_ugv"     default="8.0"/>
    <arg name="coupled"             default="true"/>
    <arg name="samp_goal_rate"      default="15"/>
    <arg name="sample_mode_rrt"     default="1"/>

    <!-- Global Planner: RRT* -->
    <node pkg="rrt_planners" type="random_global_planner_node" name="random_planner_node" output="screen"># launch-prefix="gdb -ex run --args">
        <rosparam command="load" file="$(find marsupial_optimizer)/cfg/3d_global_params.yaml"/>
        <rosparam command="load" file="$(find marsupial_optimizer)/cfg/stage_$(arg scenario_number)_ws.yaml"/>
        <remap from="/Make_Plan" to="Make_Plan"/>
        <remap from="/Execute_Plan" to="Execute_Plan"/>
        <param name="path"   value="/home/$(arg pc_user_name)/$(arg files_results)"/>  
        <param name="name_output_file"    value="$(arg name_output_file)"/>     
        <param name="scenario_number"    value="$(arg scenario_number)"/>     
        <param name="planner_type" value="$(arg planner_type)"/> 
        <param name="world_frame" value="$(arg world_frame)"/> 
        <param name="ugv_base_frame" value="$(arg ugv_frame)"/> 
        <param name="uav_base_frame" value="$(arg uav_frame)"/>
        <param name="reel_base_frame" value="$(arg reel_frame)"/>
        <param name="pause_execution" value="$(arg pause_execution)"/>
        <param name="write_data_for_analysis"    value="$(arg write_data_files)"/>     
        <param name="debug_rrt"    value="false"/>     
        <param name="nodes_marker_debug"    value="true"/>     
        <param name="debug" value="$(arg debug_msgs)"/>
        <param name="showConfig" value="true"/>
        <param name="coupled"   value="$(arg coupled)"/>     
        <param name="n_iter" value="$(arg n_iter_rrt)"/>   
        <param name="n_loop" value="$(arg n_loop_rrt)"/>   
        <param name="radius_near_nodes" value="$(arg radius_near_nodes)"/>   
        <param name="step_steer" value="$(arg step_steer)"/>   
        <param name="min_l_steer_ugv" value="$(arg min_l_steer_ugv)"/>   
        <param name="length_tether_max" value="$(arg length_tether_max)"/>   
        <param name="num_pos_initial"   value="$(arg num_pos_initial)"/>     
        <param name="goal_gap_m"   value="$(arg goal_gap_m)"/>    
        <param name="samp_goal_rate"   value="$(arg samp_goal_rate)"/>  
        <param name="sample_mode"    value="$(arg sample_mode_rrt)"/>    
        <param name="use_distance_function"    value="$(arg use_distance_function)"/>     
        <param name="min_distance_add_new_point" value="1.0"/>  
        <param name="distance_obstacle_ugv"         value="0.5"/> <!-- bound distance UGV to obstacles 0.05[m] resolution of the map-->
        <param name="distance_obstacle_uav"         value="0.5"/> <!-- bound distance UAV to obstacles 0.05[m] resolution of the map-->
        <param name="distance_catenary_obstacle"  value="0.2"/> <!--bound distance catenary to obstacles [m] -->   

        <param name="w_nearest_ugv"    value="12"/>   # catenary Obstacles collision 0.00100
        <param name="w_nearest_uav"    value="6"/>   # catenary length 0.00150
        <param name="w_nearest_smooth"    value="10"/>   # catenary Z collision 0.00105
        <!-- For Grid3D -->
        <param name="map_path"   value="$(find marsupial_optimizer)/maps/stage_$(arg scenario_number).bt"/>
        <param name="global_frame_id"   value="map"/>
        <!-- <param name="sensor_dev "   value="0.2"/> # Gaussian error -->
    </node>

    <!-- Local Planner: Optimizer Ceres-->
    <node pkg="marsupial_optimizer" type="optimizer_local_planner_node" name="optimizer_local_planner_node" output="screen">#  launch-prefix="gdb -ex run --args"> #launch-prefix="valgrind">
        <rosparam command="load" file="$(find marsupial_optimizer)/cfg/3d_local_params.yaml"/>
        <rosparam command="load" file="$(find marsupial_optimizer)/cfg/stage_$(arg scenario_number)_ws.yaml"/>
        <remap from="/Execute_Plan" to="Execute_Plan"/>
        <remap from="/Navigation" to="Navigation"/>
        <remap from="/octomap_binary_local" to="/octomap_binary"/>
        <param name="world_frame" value="$(arg world_frame)"/> 
        <param name="ugv_base_frame" value="$(arg ugv_frame)"/> 
        <param name="uav_base_frame" value="$(arg uav_frame)"/>
        <param name="reel_base_frame" value="$(arg reel_frame)"/>
        <param name="debug" value="$(arg debug_msgs)"/>
        <param name="show_config" value="$(arg show_config_msgs)"/>
        <param name="traj_dest_frame" value="uav_base_link"/>

        <param name="traj_in_rviz" value="$(arg graph_traj_in_rviz)"/>
        <!-- <param name="pause_end_optimization" value="$(arg pause_execution)"/> -->
        <param name="pause_end_optimization" value="true"/>
        <param name="write_data_residual" value="$(arg write_data_residual)"/>
        <param name="use_distance_function"    value="$(arg use_distance_function)"/>     
            
        <param name="verbose_optimizer" value="$(arg verbose_optimizer)"/>
       
        <param name="fix_last_position_ugv"   value="false"/> 
        <param name="optimize_ugv"   value="true"/>  # UGV
        <param name="optimize_uav"   value="true"/>  # UAV
        <param name="optimize_cat"   value="true"/>  # CAT

        <param name="equidistance_ugv_constraint"   value="1"/>   # equidistance_ugv_constraint
        <param name="obstacles_ugv_constraint"      value="1"/>   # obstacles_ugv_constraint
        <param name="traversability_ugv_constraint" value="1"/>   # traversability_ugv_constraint
        <param name="kinematic_ugv_constraint"      value="1"/>   # kinematic_ugv_constraint
        <param name="time_ugv_constraint"           value="true"/>   # time_ugv_constraint
        <param name="velocity_ugv_constraint"       value="true"/>   # velocity_ugv_constraint
        <param name="acceleration_ugv_constraint"   value="true"/>   # acceleration_ugv_constraint

        <param name="equidistance_uav_constraint"   value="1"/>    # equidistance_uav_constraint    // 1 = autodiff ; 0 = analytic  
        <param name="obstacles_uav_constraint"      value="1"/>    # obstacles_uav_constraint    // 1 = autodiff ; 0 = analytic
        <param name="kinematics_uav_constraint"     value="1"/>    # kinematics_uav_constraint    // 1 = autodiff ; 0 = analytic
        <param name="time_uav_constraint"           value="true"/>    # time_uav_constraint
        <param name="velocity_uav_constraint"       value="true"/>    # velocity_uav_constraint
        <param name="acceleration_uav_constraint"   value="true"/>    # acceleration_uav_constraint

        <param name="catenary_constraint"   value="1"/>    # catenary_constraint // 1= autodiff ; 0= numeric
        <param name="catenary_length_constraint"   value="true"/>    # catenary_length_constraint // true = autodiff ; false = numeric

        <!-- UGV Constraint Parameters -->
        <param name="w_alpha_ugv"   value="0.200"/>   # Equi-distance ugv
        <param name="w_beta_ugv"    value="0.080"/>   # Obstacles ugv
        <param name="w_gamma_ugv"   value="0.120"/>   # Smoothness ugv 
        <param name="w_epsilon_ugv"   value="0.05"/>   # Velocity 
        <param name="w_zeta_ugv"      value="0.005"/>   # Acceleration 

        <param name="w_theta_ugv"   value="0.5000"/>   # Traversability ugv
        
        <!-- UAV Constraint Parameters -->
        <param name="w_alpha_uav"   value="0.250"/>   # Equi-distance uav 
        <param name="w_beta_uav"    value="0.080"/>   # Obstacles uav 
        <param name="w_gamma_uav"   value="0.140"/>   # Smoothness uav
        <param name="w_epsilon_uav"   value="0.05"/>   # Velocity 
        <param name="w_zeta_uav"      value="0.005"/>   # Acceleration 
        
        <!-- Time Constraint Parameters -->
        <param name="w_delta"     value="0.001"/>  # time 

        <!-- Catenary Constraint Parameters -->
        <!-- <param name="w_eta_1"    value="0.0075"/>   # catenary Obstacles collision  -->
        <param name="w_eta_1"    value="0.0250"/>   # catenary Obstacles collision 
        <param name="w_eta_2"    value="0.1000"/>   # catenary length 0.00150

        <param name="w_eta_3"    value="0.0120"/>   # catenary Z collision 0.00105

        <param name="n_iter_opt"    value="100"/>   <!-- number max. of iterations per optimization --> 
        <param name="length_tether_max" value="$(arg length_tether_max)"/>  
            
        <param name="distance_obstacle_ugv"         value="1.2"/> <!-- bound distance UGV to obstacles [m]-->
        <param name="distance_obstacle_uav"         value="1.2"/> <!-- bound distance UAV to obstacles [m]-->
        <param name="initial_velocity_ugv"  value="1.0"/> <!-- [m/seg]  Constant velocity UGV during trajectory-->
        <param name="initial_velocity_uav"  value="1.0"/> <!-- [m/seg]  Constant velocity UAV during trajectory-->
        <param name="initial_acceleration_ugv"  value="0.0"/> <!-- [m/seg^2] 0 acceleration UAV during trajectory-->
        <param name="initial_acceleration_uav"  value="0.0"/> <!-- [m/seg^2] 0 acceleration UGV during trajectory-->
        <param name="angle_min_traj"  value="$(eval 3.1415 / 9.0)"/> <!-- [rad] max smooth angles UGV and UAV in trajectory-->
        #Parameter for Catenary
        <param name="distance_catenary_obstacle"  value="0.10"/> <!--bound distance catenary to obstacles [m] -->   
        <param name="dynamic_catenary"  value="0.5"/> <!-- [m/seg] Max. Vel. that reel can folding and unfolding tether-->    
        #Parameter to write file 
        <param name="write_data_for_analysis"    value="$(arg write_data_files)"/>     
        <param name="name_output_file"    value="$(arg name_output_file)"/>     
        <param name="scenario_number"    value="$(arg scenario_number)"/>     
        <param name="num_pos_initial"   value="$(arg num_pos_initial)"/>     
        <param name="path"   value="/home/$(arg pc_user_name)/"/>     
        <param name="pc_user_name"  value="$(arg pc_user_name)"/>     
        <param name="files_results"   value="$(arg files_results)"/>     
        <param name="files_residuals"   value="$(arg files_residuals)"/>     

        <!-- For Grid3D -->
        <param name="map_path"   value="$(find marsupial_optimizer)/maps/stage_$(arg scenario_number).bt"/>
        <param name="global_frame_id"   value="map"/>
        <!-- <param name="sensor_dev "   value="0.2"/> # Gaussian error -->
    </node>

    <!-- Robot Marker -->
    <node pkg="upo_markers" type="siar_marker_node" name="siar_marker_node" output="screen">
        <param name="frame_id" value="$(arg ugv_frame)"/>
        <param name="scale" value="2.0"/>
    </node>

     <!-- Robot Marker -->
    <node pkg="upo_markers" type="marker_node" name="uav_marker_node" output="screen">
        <param name="base_frame_id" value="$(arg uav_frame)"/>
        <param name="model" value="m100"/> <!-- m600 or m100 -->
        <param name="color" value="0.0"/> 
        <param name="color_r" value="0.0"/> 
        <param name="color_g" value="0.0"/> 
        <param name="color_b" value="0.0"/> 
        <param name="scale" value="1.5"/>
    </node>

    <node pkg="upo_markers" type="marker_node" name="circle_marker_node" output="screen">
        <param name="base_frame_id" value="$(arg uav_frame)"/>
        <param name="model" value="circle"/> 
        <param name="radius" value="0.6"/> 
        <param name="color" value="0.5"/> 
        <param name="color_r" value="0.8"/> 
        <param name="color_g" value="0.4"/> 
        <param name="color_b" value="0.0"/> 
        <param name="scale_x" value="0.2"/> 
        <param name="scale_y" value="0.2"/> 
        <param name="scale_z" value="0.2"/> 
        <param name="scale" value="1.0"/>
    </node>

</launch>