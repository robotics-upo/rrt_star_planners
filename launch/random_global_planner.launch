<launch>
    <arg name="planner_type" default="rrt_star"/>
    <arg name="use_dron" default="true"/>
    <arg name="launch_robot_marker" default="true"/>

    <arg name="graph_traj_in_rviz" default="false"/>  <!-- Execute Trajectory computed and translating tf robots-->
    <arg name="pause_execution" default="false"/>
    <arg name="write_data_files" default="true"/>
    <arg name="use_distance_function" default="true"/>  
    <arg name="home"    default="$(env HOME)"/>     

    <arg name="write_data_residual" default="false"/> # Parameter to write the residual value for each optimizer Functor

    <arg name="world_frame" default="map"/> 
    <arg name="ugv_frame" default="ugv_base_link"/> 
    <arg name="uav_frame" default="uav_base_link"/>
    <arg name="reel_frame" default="reel_base_link"/>
    
    <arg name="verbose_optimizer" default="false"/>
    <arg name="debug_msgs" default="false"/>
    <arg name="show_config_msgs" default="true"/>

    <arg name="save_path_in_file"   default="false"/>

    <!-- To write Files -->
    <arg name="map_file"        default="stage_1"/>
    <arg name="num_pos_initial"         default="1"/>
    <arg name="name_output_file"    default="method"/>     
    <arg name="files_results"    default="results_marsupial_optimizer"/>     
    <arg name="files_residuals"    default="residuals_optimization_data/"/>     
    <!-- RRT Parameters -->
    <arg name="n_iter_rrt"          default="20"/>
    <arg name="n_loop_rrt"          default="100"/>
    <arg name="radius_near_nodes"   default="1.2"/> 
    <arg name="goal_gap_m"          default="0.2"/> # 1.4
    <arg name="step_steer"          default="0.4"/>
    <arg name="min_l_steer_ugv"     default="8.0"/>
    <arg name="coupled"             default="true"/>
    <arg name="samp_goal_rate"      default="15"/>
    <arg name="sample_mode_rrt"     default="1"/>
        <!-- Catenary Checker-->
    <arg name="precomputed_file" default="$(find marsupial_optimizer)/maps/$(arg map_file).tar.gz"/>
    <arg name="dbscan_epsilon" default="0.5"/>
    <arg name="dbscan_gamma" default="0.1"/>
    <arg name="dbscan_theta" default="0.1"/>
    <arg name="use_dbscan_lines" default="false"/>
    <arg name="dbscan_min_points" default="5"/>
    <arg name="use_parabola"   default="false"/>
    <arg name="use_both"   default="false"/>
    <arg name="n_planes" default="100"/>

    <arg name="method" default="parable" if="$(arg use_parabola)"/>
    <arg name="method" default="catenary" unless="$(arg use_parabola)"/>
    <arg name="catenary_file" default="rrt_$(arg map_file)_$(arg num_pos_initial)_$(arg method)"/>

    <!-- Global Planner: RRT* -->
    <arg name="debug" default="false"/>
    <arg name="debug_rrt" default="false"/>

    <arg name="prefix_" default="" unless="$(arg debug)"/>
    <arg name="prefix_" default="xterm -e gdb --args" if="$(arg debug)"/>
    <node pkg="rrt_planners" type="random_global_planner_node" name="random_planner_node" output="screen" required="true" launch-prefix="$(arg prefix_) ">
        <rosparam command="load" file="$(find marsupial_optimizer)/cfg/3d_global_params.yaml"/>
        <rosparam command="load" file="$(find marsupial_optimizer)/cfg/$(arg map_file)_ws.yaml"/>
       
        <remap from="/Execute_Plan" to="Execute_Plan"/>
        <param name="path"   value="$(arg home)/$(arg files_results)"/>  
        <param name="name_output_file"    value="$(arg name_output_file)"/>     
        <param name="catenary_file" value="$(arg catenary_file)"/>
        <param name="planner_type" value="$(arg planner_type)"/> 
        <param name="world_frame" value="$(arg world_frame)"/> 
        <param name="ugv_base_frame" value="$(arg ugv_frame)"/> 
        <param name="uav_base_frame" value="$(arg uav_frame)"/>
        <param name="reel_base_frame" value="$(arg reel_frame)"/>
        <param name="pause_execution" value="$(arg pause_execution)"/>
        <param name="write_data_for_analysis"    value="$(arg write_data_files)"/>     
        <param name="debug_rrt"    value="$(arg debug_rrt)"/>     
        <param name="debug"    value="$(arg debug_rrt)"/>     
        <param name="nodes_marker_debug"    value="true"/>     
        <param name="debug" value="$(arg debug_msgs)"/>
        <param name="showConfig" value="true"/>
        <param name="coupled"   value="$(arg coupled)"/>     
        <param name="n_iter" value="$(arg n_iter_rrt)"/>   
        <param name="n_loop" value="$(arg n_loop_rrt)"/>   
        <param name="radius_near_nodes" value="$(arg radius_near_nodes)"/>   
        <param name="step_steer" value="$(arg step_steer)"/>   
        <param name="min_l_steer_ugv" value="$(arg min_l_steer_ugv)"/>   
        <param name="length_tether_max" value="$(arg length_tether_max)"/>   
        <param name="num_pos_initial"   value="$(arg num_pos_initial)"/>     
        <param name="goal_gap_m"   value="$(arg goal_gap_m)"/>    
        <param name="samp_goal_rate"   value="$(arg samp_goal_rate)"/>  
        <param name="sample_mode"    value="$(arg sample_mode_rrt)"/>    
        <param name="use_distance_function"    value="$(arg use_distance_function)"/>     
        <param name="min_distance_add_new_point" value="1.0"/>  
        <param name="distance_obstacle_ugv"         value="1.0"/> <!-- bound distance UGV to obstacles 0.05[m] resolution of the map-->
        <param name="distance_obstacle_uav"         value="0.6"/> <!-- bound distance UAV to obstacles 0.05[m] resolution of the map-->
        <param name="distance_catenary_obstacle"  value="0.3" unless="$(arg use_parabola)"/> <!--bound distance catenary to obstacles [m] -->   
        <param name="distance_catenary_obstacle"  value="0.0" if="$(arg use_parabola)"/> <!--bound distance catenary to obstacles [m] -->   

        <param name="w_nearest_ugv"    value="12"/>   # catenary Obstacles collision 0.00100
        <param name="w_nearest_uav"    value="6"/>   # catenary length 0.00150
        <param name="w_nearest_smooth"    value="10"/>   # catenary Z collision 0.00105
        <!-- For Grid3D -->
        <param name="map_path"   value="$(find marsupial_optimizer)/maps/$(arg map_file).bt"/>
        <param name="map_file"   value="$(arg map_file)"/>
        <param name="global_frame_id"   value="map"/>
        <remap from="points2" to="/octomap_point_cloud_centers"/>
        <!-- <param name="sensor_dev "   value="0.2"/> # Gaussian error -->
        <!-- Catenaty Checker-->
        <param name="use_parabola"   value="$(arg use_parabola)"/>
        <param name="precomputed_file" value="$(arg precomputed_file)"/>
        <param name="dbscan_min_points" value="$(arg dbscan_min_points)"/>
        <param name="dbscan_epsilon" value="$(arg dbscan_epsilon)"/>
        <param name="dbscan_gamma" value="$(arg dbscan_gamma)"/>
        <param name="dbscan_theta" value="$(arg dbscan_theta)"/>
        <param name="use_dbscan_lines" value="$(arg use_dbscan_lines)"/>
        <param name="use_both" value="$(arg use_both)"/>

        <param name="n_planes" value="$(arg n_planes)"/>
        <param name="optimize" value="$(arg optimize)"/>
        <param name="do_steer_ugv" value="$(arg do_steer_ugv)"/>
    </node>
   
    <!-- Robot Marker -->
    <node pkg="upo_markers" type="siar_marker_node" name="siar_marker_node" output="screen">
        <param name="frame_id" value="$(arg ugv_frame)"/>
        <param name="scale" value="2.0"/>
    </node>

        <param name="traj_in_rviz"                  value="$(arg graph_traj_in_rviz)"/>
        <param name="pause_end_optimization"        value="$(arg pause_execution)"/>
        <param name="write_data_residual"           value="$(arg write_data_residual)"/>
        <param name="use_distance_function"         value="$(arg use_distance_function)"/>     
        <param name="use_parable"                   value="true"/>
        <param name="export_path"                   value="false"/>
            
        <param name="verbose_optimizer"             value="$(arg verbose_optimizer)"/>

        <param name="n_iter_opt"                    value="100"/>  #0  <!-- number max. of iterations per optimization --> 

</launch>
